// Example of a "relay" - a client and server.
// Uses the old favourite Hello World as a basis.

module ClientAndServer {
    struct NoxReading{
       long time;
       long date;
       string station_name;
       long reading_value;
    };

    interface Sensor {
        readonly attribute string station_name;
        readonly attribute string location;
        NoxReading get_reading();
        void activate();
        void deactivate();
        void reset();
        void raise_alarm(in NoxReading reading);
        void connectLMS(in string lms_name);
    };

    typedef sequence<NoxReading> Log_of_alarm_readings;
    typedef sequence<NoxReading> Set_of_readings;

    interface  LocalMonitoringStation {
        Set_of_readings take_readings();
        string fetch_NoxReading(in string sensor_name);
        readonly attribute string name;
        readonly attribute string location_name;
        readonly attribute Log_of_alarm_readings log;
        void appendReadingToNoxReadingList(in NoxReading reading);
        void raise_alarm (in NoxReading alarmReading);
        void add_monitoring_station(in string station_name, in string station_location, in string station_ior);
        void add_local_monitoring_station(in string lms_name, in string lms_ior);
        void connectSensor(in string sensor_name);
        void connectHQ();
    };

    interface HeadQuarter{
        void raise_alarm(in NoxReading alarm_reading);
        void register_agency(in string who, in string contact_details, in string area_of_interest);
        void register_local_monitoring_station(in string server_name);
        string getNox(in string lms_name, in string sensor_name);
        void connectLMS(in string lms_name);
        string noxReading_ToString(in NoxReading reading);
    };
};
